file U5-DT.bin F000
file U6-DT.bin F800
option 6800
option noasc
option noflex

comment 0000 RAM addresses
label 0000 null_ptr

label 0027 stack_top
lcomment 0027 top of stack

label 0028 duplexing_mode
lcomment 0028 char: duplexing control byte. PAG=1, HDX=0, FDX=-1

label 0029 receive_buffer_tail_ptr
lcomment 0029 char \*: pointer to tail of receive buffer FIFO

label 002B key_buffer_head_ptr
lcomment 002B char \*: pointer to head of keyboard buffer FIFO

label 002D cursor_position_ptr
lcomment 002D word: cursor position

label 002F serial_mode
lcomment 002F char: control byte for setting USART serial mode

label 0030 temp_str_ptr
lcomment 0030 char \*: for temporarily saving position in string

label 0032 baud_gen_ptr
lcomment 0032 struct void \*: pointer to baud generator set address
label 0033 baud_gen_ptr+1

label 0034 current_row_end_ptr
lcomment 0034 char \*: pointer to end of current row
label 0035 current_row_end_ptr+1

label 0036 baud_config_ptr
lcomment 0036 struct baud \*: pointer to current baud config struct
label 0038 parity_config_ptr
lcomment 0038 struct parity \*: pointer to current parity config struct
label 003A stop_bits_config_ptr
lcomment 003A struct stop_bits \*: pointer to current stop bits config struct
label 003C columns_config_ptr
lcomment 003C struct columns \*: pointer to current columns config struct
label 003E duplexing_config_ptr
lcomment 003E struct duplexing \*: pointer to current duplexing config struct

label 0040 break_mode_on
lcomment 0040 char: are we putting USART into break mode

label 0041 max_column_temp
lcomment 0041 char: for temporarily saving max_column

label 0042 read_buffer_head_ptr
lcomment 0042 char \*: pointer to head of receive buffer FIFO

label 0044 current_row
lcomment 0044 char: current row

label 0045 current_column
lcomment 0045 char: current column

label 0046 scroll_position
lcomment 0046 char \*: current position during scroll operation
label 0047 scroll_position+1

label 0048 max_column
lcomment 0048 char: highest column that can be displayed

label 0049 key_buffer_tail_ptr
lcomment 0049 char \*: pointer to tail of keyboard buffer FIFO

label 004b screen_ptr
lcomment 004b char \*: pointer to position in screen_buffer
label 004c screen_ptr+1
label 004d row_number
label 004f temp_ptr
lcomment 004F void \*: temp pointer
label 0050 temp_ptr+1
lcomment 0050 low byte of temp_ptr

label 0053 stack_ptr_save
lcomment 0053 void \*: for temporarily saving the location of the stack pointer
label 0055 last_char_ptr
lcomment 0055 char \*: pointer to last non-space character in screen buffer
label 0057 line_start_ptr
lcomment 0057 char \*: pointer to first character in line
label 0058 line_start_ptr+1
label 0059 temp_buf_ptr
lcomment 0059 char \*: for temporarily storing pointer to part of screen buffer
label 005B dest_ptr
lcomment 005B char \*: destination parameter for copy operations
label 005c dest_ptr+1
label 005d param_text
lcomment 005D void \*: for temporarily storing pointer to current config item
label 005F print_enabled
lcomment 005F char: printing enabled. set by DC2, cleared by DC4
label 0061 counter
lcomment 0061 char: loop counter

label 0062 tty_mode
lcomment 0062 char: tty mode. no=0, yes=1
label 0063 tty_config_ptr
lcomment 0063 struct tty \*: pointer to current tty config

label 0065 transmit_off
lcomment 0065 char: transmit suspension flag

label 0066 receive_buffer_count
lcomment 0066 short count of bytes in the receive buffer

label 0068 xoff_count
lcomment 0068 char: incremented if we send XOFF

label 0069 misc_data
lcomment 0069 char: data byte sent out to the speaker/ind4/ind5/ind6 port

label 006a beep_timer
lcomment 006a char: increments while speaker is sounding, stops when it reaches 150

label 006b beep_delay
lcomment 006b char: no speaker until this matches some bits of $03 ?

label 006C param1
lcomment 006C char: first parameter in escape sequence
label 006D param2
lcomment 006D char: second parameter in escape sequence
label 006E param3
lcomment 006E char: third parameter in escape sequence
label 006F param_ptr
lcomment 006F char \*: pointer to next parameter in escape sequence
label 0071 seq_process_ptr
lcomment 0071 void \*: pointer to next routine to use to process escape sequences
label 0073 seq_processing
lcomment 0073 char: incremented when we're currently processing a received escape sequence

label 0078 flow_control_mode
lcomment 0078 char: flow control mode. 0==XON/XOFF

label 0079 hide_control_chars
lcomment 0079 char: clear for visible control characters, $08 for invisible

label 007a show_cursor
lcomment 007a char: clear for no invert, $80 for invert

label 0080 screen_buffer
lcomment 0080 char[80\*24]: the screen buffer
label 07b0 screen_buffer+1840
#label 07ff screen_buffer_end
label 07ff screen_buffer+1919
lcomment 07ff last address of screen_buffer

label 0800 key_buffer
lcomment 0800 char[34?]: keyboard buffer FIFO
label 0822 key_buffer+34

label 0823 tab_stop_array
lcomment 0823 char[10]: tab stops
label 082C tab_stop_array+9
label 082d tab_stop_array+10

label 082E receive_buffer
lcomment 082E char[768]: received data buffer
label 0b2d receive_buffer+767

label 0B30 line_buffer
lcomment 0B30 char[80]: buffer for current(?) line

label 0bff memory_end
lcomment 0bff Last byte of our RAM

comment 8000
comment 8000 I/O addresses
label 8000 baud_gen_base_addr
lcomment 8000 void[16]: baud generator control
label 8006 baud_gen_base_addr+6

label B004 serial_data_addr
lcomment B004 char: serial data
label B005 serial_control_addr
lcomment B005 char: serial control

label B008 kbd_data_addr
lcomment B008 char: keyboard data
label B009 kbd_control_addr
lcomment B009 char: keyboard control

label B00A printer_data_addr
lcomment B00A char: printer data
label B00B printer_control_addr
lcomment B00B char: printer control

label B00C preset_data
lcomment B00C char: P1 socket data
label B00D preset_control
lcomment B00D char: P1 socket control

label B00E misc_port_data
lcomment B00E char: speaker, ind4, ind5, ind6 data
label B00F misc_port_control
lcomment B00F char: speaker, ind4, ind5, ind6 control

comment f000 RESET handler
comment f000 set stack pointer to $27
comment f003 clear registers
comment f008 clear all the memory
comment f017 disable interrupts
comment f018 enable interrupt on low-going KBINT, enable keyboard port
bin f019
comment f01d set misc port as outputs
bin f01e
comment f022 enable interrupt on high-going RXRDY, enable misc port
bin f023
comment f027 send misc_data out to speaker and IND4,5,6
comment f02c set to 300 baud
comment f02f simultaneously send 01111111 to printer data port, 00111100 to printer control port
lcomment f02f printer high bit is input, rest are outputs
lcomment f032 set PRCON high, enable printer port
const f030-f031
comment f035 fill line_buffer with spaces
dec f036
lcomment f037 SP - Space
comment f047 enable presets port
bin f048
comment f04f set tty config from preset
bin f053
comment f05b set baud config from preset
bin f05f
comment f067 set stop bits config from preset
bin f06b
comment f073 set parity config from preset
bin f077
comment f086 set duplexing config from preset
bin f07e
bin f08a
bin f091
comment f099 set columns config to 80

comment f0bb
comment f0bb The main loop
label f0bb main
dec f0be
comment f0c4 check read buffer
comment f0cd process read buffer
comment f0d0 fold read buffer tail if necessary
comment f0d8 update read buffer tail
comment f01e if read buffer fullness is low, and we've sent XOFF, send XON
comment f0ee if we've started handling an escape sequence, resume that
comment f0f7 is this a printable character (space or above)
comment f0fb handle non-printable characters
lcomment f0fb CR - Carriage Return
lcomment f0ff command_carriage_return
lcomment f103 LF - Line Feed
comment f114 loop until printer high bit clear
lcomment f121 command_line_feed
lcomment f128 BS - Backspace
lcomment f12c command_backspace2
lcomment f130 HT - Horizontal Tab
lcomment f134 command_horizontal_tab
lcomment f138 DC2 - Device Control Two
lcomment f13c command_print_enable
lcomment f140 DC4 - Device Control Four
lcomment f144 command_print_disable
lcomment f148 BEL - Bell, Alert
lcomment f14c command_bell
lcomment f150 ESC - Escape

comment f16a
label f16a handle_received_command_code

comment f16d
label f16d check_key_buffer
lcomment f189 BEL - Bell, Alert
lcomment f193 PAG
lcomment f19b HDX
lcomment f1a0 LF - Line Feed

comment f1ad
label f1ad send_escape_sequence
lcomment f1b0 PAG
lcomment f1be HDX

comment f1c8
label f1c8 transmit_character

comment f1cd
label f1cd send_serial_byte
lcomment f1d7 not TTY
lcomment f1e1 in TTY mode, make characters uppercase

comment f1e7
label f1e7 add_character_to_screen
lcomment f1ea not TTY
comment f1ec if alphabetic, make uppercase
lcomment f1f9 PAG or HDX
lcomment f1fb SP - Space
lcomment f1fd not a control character
dec f21c

comment f222
label f222 increment_row
dec f225

comment f235
lcomment f240 RxRDY
bin f241

comment f245
label f245 handle_receive_ready
lcomment f245 Sync Detect/Break Detect, Framing Error, Overrun Error
bin f246
lcomment f249 RTS, error reset, Rx enable, DTR, Tx enable
bin f24a
lcomment f24e chomp invalid byte
lcomment f251 replace it with a "?"
char f252
label f255 handle_received_valid_byte
lcomment f258 strip high bit
lcomment f25a DC1 - XON
lcomment f25e DC3 - XOFF

comment f26a
label f26a handle_received_character

comment f287
label f287 handle_keyboard_interrupt
lcomment f28a reset requested

comment f29e
label f29e handle_received_xoff
dec f2a4

comment f2a8
label f2a8 handle_received_xon

comment f2ac
label f2ac send_xoff
lcomment f2ac DC3 - XOFF

comment f2b4
label f2b4 send_xon
lcomment f2b5 DC1 - XON


comment f2bc
label f2bc soft_reset
dec f2e1
lcomment f2ed printer disabled?
lcomment f2f5 RTS, error reset, Rx enable, DTR, Tx enable
bin f2f6

comment f307
label f307 screen_strip_hibits

comment f31e
comment f31e CTRL+CLEAR SCRN key pressed
label f31e cmd_clear

comment f326
comment f326 Control Function - Erase In Display
label f326 cs_ED
dec f329

comment f32d
comment f32d fill memory from 0080 to 07ff with spaces
label f32d clear_screen
dec f32f
lcomment f338 SP - Space
dec f351

comment f35d
comment f35d HOME key pressed
label f35d cmd_home
label f363 move_home

comment f36b
comment f36b RIGHT key pressed
label f36b cmd_right
comment f371 CUF received
label f371 do_cursor_forward

comment f383
comment f383 DOWN key pressed
label f383 cmd_down
comment f389 CUD received
label f389 do_cursor_down
dec f38f
dec f393

comment f39a
comment f39a LEFT key pressed
label f39a cmd_left
comment f3a0 CUB received
label f3a0 do_cursor_backward

comment f3b1
comment f3b1 UP key pressed
label f3b1 cmd_up
comment f3b7 CUU received
label f3b7 do_cursor_up
dec f3bd
dec f3c1

comment f3c8
comment f3c8 make X the current cursor position.
comment f3c8 invert character if show_cursor is set
label f3c8 paint_cursor

comment f3d1
comment f3d1 given a row and column, find the address in the screen buffer,
comment f3d1 as well as the address of the end of the current row
label f3d1 get_position
comment f3d5 multiply row by 80
comment f3e1 add column
comment f3e3 add offset of screen_buffer

comment f3fe
label f3fe scroll_screen_sub

comment f43a
label f43a scroll_screen
dec f43b
lcomment f43f last line of screen_buffer
dec f446

comment f44f
comment f44f fill line with spaces
label f44f blank_line
dec f450
lcomment f451 SP - Space

comment f45a
label f45a handle_command_code
comment f461 use A to calculate offset into array at FCE6, jump to address found there
lcomment f464 cmdvecs & 0xff
lcomment f466 cmdvecs >> 8

comment f47d
comment f47d SHIFT+CTRL+D key pressed
comment f47d do nothing, just return
label f47d cmd_nop

comment f47e
comment f47e BREAK key pressed
comment f47e toggle transmission of BREAK on or off
label f47e cmd_break
dec f486
lcomment f48b RTS, error reset, Rx enable, DTR, Tx enable
bin f48c
lcomment f491 RTS, error reset, send break character, Rx enable, DTR, Tx enable
bin f492

comment f497
comment f497 RETURN key pressed
comment f497 In page mode, just move to next line
comment f497 In half or full duplex, also transmit CR
comment f497 In full duplex, also update the cursor
label f497 cmd_return
lcomment f49a PAG
lcomment f49c CR - Carriage Return
lcomment f4a4 HDX

comment f4b1
comment f4b1 BACK SPACE key pressed
comment f4c5 In page mode, just delete the character and move the cursor
comment f4c5 In half or full duplex, also transmit BS
comment f4c5 In full duplex, also update the cursor
label f4b1 cmd_backspace
lcomment f4b4 PAG
lcomment f4b6 BS - Backspace
lcomment f4be HDX

comment f4c5
comment f4c5 BS received
comment f4c5 Delete character and move the cursor
label f4c5 cmd_backspace2

comment f4d8
comment f4d8 PRINT XMIT key pressed
comment f4d8 In half or full duplex, do nothing
comment f4d8 In page mode, send screen text out
label f4d8 cmd_transmit
lcomment f4db PAG
dec f515

comment f51f
comment f51f Send out CR and LF
label f51f transmit_CR_LF

comment f52a
comment f52a Find last non-blank character in line
label f52a line_find_last_char

comment f546
comment f546 Find last non-blank character on screen
label f546 screen_find_last_char
const f561

comment f564
comment f564 SET MODE key pressed
comment f564 Interactively configure the terminal
label f564 cmd_set_mode
dec f566
lcomment f569 save the text under the config line
lcomment f572 print the config line and all the values
lcomment f57a baud_config_ptr->offset
lcomment f581 parity_config_ptr->offset
lcomment f588 stop_bits_config_ptr->offset
lcomment f58f columns_config_ptr->offset
lcomment f596 duplexing_config_ptr->offset
lcomment f59d tty_config_ptr->offset
label f5a2 jmp_configure_baud
label f5a5 jmp_configure_parity
label f5a8 jmp_configure_stop_bits
label f5ab jmp_configure_columns
label f5ae jmp_configure_duplexing
label f5b1 jmp_configure_tty

comment f5b4
comment f5b4 Apply settings to baud generator, USART, etc
label f5b4 serial_init
lcomment f5b6 baud_config_ptr->value
lcomment f5c0 parity_config_ptr->value
lcomment f5c4 stop_bits_config_ptr->value
lcomment f5ca columns_config_ptr->value
lcomment f5d0 duplexing_config_ptr->value
lcomment f5d6 tty_config_ptr->value
lcomment f5f8 RTS, error reset, Rx enable, DTR, Tx enable
bin f5f9

comment f604
label f604 configure_baud
lcomment f606 baud_config_ptr->offset
lcomment f615 RETURN pressed, done with SET MODE operation
lcomment f618 UP or DOWN pressed, changing baud
lcomment f61a LEFT or RIGHT pressed
lcomment f61e UP pressed
lcomment f625 already at minimum value
label f62e save_baud
lcomment f630 baud_config_ptr->offset
label f638 increment_baud
lcomment f63d already at maximum value
dec f64c
lcomment f64d RIGHT pressed, set parity
lcomment f64f LEFT pressed


comment f655
comment f655 move the cursor to column B of the config line
comment f655 and print the parameter value pointed to by X
label f655 print_parameter

comment f662
label f662 configure_parity
lcomment f664 parity_config_ptr->offset
lcomment f673 RETURN pressed, done with SET MODE operation
lcomment f676 UP or DOWN pressed, changing parity
lcomment f678 LEFT or RIGHT pressed
lcomment f67c UP pressed
lcomment f683 already at minimum value
label f689 save_parity
lcomment f68b parity_config_ptr->offset
label f693 increment_parity
lcomment f698 already at maximum value
dec f6a3
lcomment f6a5 RIGHT pressed, set stop bits
lcomment f6a7 LEFT pressed


comment f6ad
label f6ad configure_stop_bits
lcomment f6af stop_bits_config_ptr->offset
lcomment f6be RETURN pressed, done with SET MODE operation
lcomment f6c1 UP or DOWN pressed, changing stop bits
lcomment f6c3 LEFT or RIGHT pressed
lcomment f6c7 UP pressed
lcomment f6ce already at minimum value
label f6d4 save_stop_bits
lcomment f6d6 stop_bits_config_ptr->offset
label f6de increment_stop_bits
lcomment f6e3 already at maximum value
dec f6ef
lcomment f6f0 RIGHT pressed, set columns
lcomment f6f2 LEFT pressed

comment f6f8
label f6f8 configure_columns
lcomment f6fa columns_config_ptr->offset
lcomment f709 RETURN pressed, done with SET MODE operation
lcomment f70c UP or DOWN pressed, changing stop bits
lcomment f70e LEFT or RIGHT pressed
lcomment f712 UP pressed
lcomment f719 already at minimum value
label f720 save_columns
lcomment f722 columns_config_ptr->offset
label f72a increment_columns
lcomment f72f already at maximum value
dec f73c
lcomment f73d RIGHT pressed, set duplexing
lcomment f73f LEFT pressed

comment f745
label f745 configure_duplexing
lcomment f747 duplexing_config_ptr->offset
lcomment f756 RETURN pressed, done with SET MODE operation
lcomment f759 UP or DOWN pressed, changing duplexing
lcomment f75b LEFT or RIGHT pressed
lcomment f75f UP pressed
lcomment f766 already at minimum value
label f76e save_duplexing
lcomment f770 duplexing_config_ptr->offset
label f778 increment_duplexing
lcomment f77d already at maximum value
dec f78b
lcomment f78c RIGHT pressed, set tty
lcomment f78e LEFT pressed

comment f794
label f794 configure_tty
lcomment f796 tty_config_ptr->offset
lcomment f7a5 RETURN pressed, done with SET MODE operation
lcomment f7a8 UP or DOWN pressed, changing tty
lcomment f7aa LEFT or RIGHT pressed
lcomment f7ae UP pressed
lcomment f7b5 already at minimum value
label f7bd save_tty
lcomment f7bf tty_config_ptr->offset
label f7c7 increment_tty
lcomment f7cc already at maximum value
dec f7da
lcomment f7db RIGHT pressed
lcomment f7dd LEFT pressed

comment f7e3
label f7e3 print_text

comment f7fa
comment f7fa wait for navigation keypress.
comment f7fa return in A,B:
comment f7fa       RETURN: 0,0
comment f7fa       DOWN:   1,1
comment f7fa       LEFT:   0,-1(255)
comment f7fa       RIGHT:  0,-2(254)
comment f7fa       UP:     0,1
label f7fa get_key
comment f7fb loop while KBTAIL==KBHEAD
comment f811 keep waiting if bit 7 not set
lcomment f814 RETURN
lcomment f81b DOWN
dec f820
lcomment f823 LEFT
dec f828
lcomment f82b RIGHT
dec f830
lcomment f833 UP
lcomment f835 keep waiting for keypress
dec f838

comment f83b
comment f83b CTRL+ESC key pressed
comment f83b Interactively edit tab stops
label f83b cmd_edit_tabs
dec f841
lcomment f844 save the text under the config line
lcomment f84a print the tab ruler (4 times)
dec f84b
lcomment f85a print the current tab stops
lcomment f85f no more tab stops
lcomment f867 print tab stop as a "shade" block
label f876 edit_tabs_loop
lcomment f87a UP, DOWN, LEFT, or RIGHT pressed
lcomment f87c RETURN pressed
lcomment f87f UP or DOWN pressed
lcomment f881 LEFT or RIGHT pressed, clear inverted character bit
lcomment f88b LEFT pressed
lcomment f898 DOWN pressed
lcomment f89a UP pressed
lcomment f8a1 tab stop array is full, can't add
lcomment f8a8 can't add tab stop at column 0
lcomment f8b0 print tab stop as an inverted "shade" block
label f8b7 edit_tabs_down
lcomment f8c0 no tab stop here
lcomment f8c4 this is the tab stop we're looking for
lcomment f8cc no tab stop found for this column
lcomment f8d4 redraw correct charactor in the ruler
dec f8d5
lcomment f8d8 inverse "1"
dec f8db
lcomment f8de inverse "6"
dec f8e1
lcomment f8e4 inverse "-"

comment f8ed
comment f8ed restore the cursor position and the screen under the tab ruler
label f8ed edit_tabs_done

comment f8fd
comment f8fd Add a new tab stop at current_column
label f8fd add_tab_stop
lcomment f904 found an empty slot
lcomment f907 already a tab stop in this column
lcomment f90b insert it here
lcomment f90d now we have to re-insert the tab stop that was here before

comment f918
label f918 edit_tabs_left

comment f924
label f924 edit_tabs_right

comment f932
label f932 delete_tab_stop

comment f949
label f949 cmd_horizontal_tab
lcomment f950 no tab stops, just add a space
dec f976

comment f97e
comment f97e CTRL+I key pressed
label f97e cmd_tab
lcomment f981 HDX or FDX
lcomment f986 HT - Horizontal Tab
lcomment f98e PAG

comment f998
comment f998 SHIFT+PRINT XMIT key pressed
label f998 cmd_print
lcomment f998 printer enabled?
dec f9be
dec f9c9
dec f9fd

comment fa14
label fa14 print_character
lcomment fa14 printer enabled?
lcomment fa20 LF - Line Feed
lcomment fa26 SP - Space
lcomment fa28 not a control character
lcomment fa2a replace with Space
lcomment fa2e not lower case
lcomment fa30 make upper case
lcomment fa32 invert bits
lcomment fa33 send to printer
lcomment fa36 set PRCON line low
bin fa37
lcomment fa42 set PRCON line high
bin fa43

comment fa50
comment fa50 CR received
label fa50 cmd_carriage_return

comment fa59
comment fa59 LF received
label fa59 cmd_line_feed
dec fa5f

comment fa6b
comment fa6b DC2 received
comment fa6b CTRL+1 key pressed
label fA6b cmd_print_enable
lcomment fa6b printer disabled?

comment fa7b
comment fa7b DC4 received
comment fa7b CTRL+2 key pressed
label fa7b cmd_print_disable
lcomment fa7b printer disabled?

comment fa8b
comment fa8b send 3 NULL characters to printer
label fa8b print_nulls

comment fa99
comment fa99 CTRL+PRINT XMIT key pressed
label fa99 cmd_print_transmit

comment fa9f
comment fa9f CTRL+3 key pressed
label fa9f cmd_print_space

comment faa8
comment faa8 BEL received
label faa8 cmd_bell
lcomment faa8 BEL - Bell, Alert

comment fab1
comment fab1 CTRL+4 key pressed
label fab1 cmd_indicators_off
comment fab3 turn off bits for LED5 and LED6?
bin fab4

comment fabf
label fabf speaker_control
dec facf
bin fad6
lcomment fad7 speaker low
lcomment fad9 set speaker low
bin fada
lcomment fae1 set speaker high
bin fae2
lcomment fae7 set speaker low
bin fae8

comment faeb
comment faeb CTRL+5 key pressed
label faeb cmd_flow_control_enable

comment faf3
comment faf3 CTRL+6 key pressed
label faf3 cmd_flow_control_disable

comment fafb
label fafb handle_received_escape_sequence
lcomment fb12 received a second escape?
lcomment fb24 received CAN - Cancel sequence
lcomment fb28 received "[" - Control Sequence Indicator
char fb29

data fb81-fba6
comment fb81
comment fb81 Array of control functions for plain escape codes (without "[")
label fb81 escape_sequences
cvec fb82
cvec fb85
comment fb88
comment fb88 Array of control functions for CSI escape codes (with "[")
label fb88 csi_escape_sequences
cvec fb89
cvec fb8c
cvec fb8f
cvec fb92
cvec fb95
cvec fb98
cvec fb9b
cvec fb9e
cvec fba1
cvec fba4

comment fba7
comment fba7 Control Function - Horizontal Tabulation Set
label fba7 cs_HTS
lcomment fbae tabs are full
lcomment fbb3 no tab for column zero

comment fbb7
comment fbb7  Control Function - Next Line
label fbb7 cs_NEL

comment fbc2
comment fbc2 Control Function - Cursor Up
label fbc2 cs_CUU

comment fbd8
comment fbd8 Control Function - Cursor Down
label fbd8 cs_CUD

comment fbee
comment fbee Control Function - Cursor Forward
label fbee cs_CUF

comment fc04
comment fc04 Control Function - Cursor Backward
label fc04 cs_CUB

comment fc1a
comment fc1a Control Function - Cursor Position (same as HVP – Horizontal and Vertical Position)
label fc1a cs_CUP
dec fc20

comment fc3e
comment fc3e Control Function – Tabulation Clear
label fc3e cs_TBC
comment fc40 0 - clear tab at cursor
comment fc42 3 - clear all tabs
comment fc5b abort if tab not set
comment fc5e is this tab at the current position?

comment fc6b
comment fc6b Control Function - Load LEDs (DEC Private)
lcomment fc6B start at location before param1 but then...
lcomment fc6e increment to wanted param
label fc6b cs_DECLL
comment fc71 0 - all off
dec fc74
comment fc73 1 - "num lock" on
comment fc77 2 - "caps lock" on
dec fc78
comment fc7b was this the last parameter?
comment fc7d next parameter
comment fc80 turn off bits for LED5 and LED6
bin fc83
comment fc84 save status and send to port
bin fc8e
bin fc94

comment fc97
comment fc97 Control Function - Text Cursor Enable Mode and Show Control Character Mode
comment fc97 probably Telcon-specific. Similar functions as the vt510 CRM and DECTCEM but with different sequences.
comment fc97 takes 2 parameters in any order.
comment fc97 6: hide cursor, 7: show cursor, 8: hide control characters, 9: show control characters
label fc97 cs_TCEMCRM
dec fc9e
dec fca8
dec fcb6

comment fcbd
comment fcbd copy line from screen to line_buffer
label fcbd copy_screen_to_line_buffer
dec fcc6
comment fcc7 copy B chars from X to dest_ptr
label fcc7 copy_line

comment fcd9 
comment fcd9 copy line from line_buffer to screen
label fcd9 copy_line_buffer_to_screen
dec fcdf

comment fce6
comment fce6 Array of command addresses used by handle_command_code (and handle_received_command_code).
comment fce6 Command codes begin at $80 and are generated by the keyboard or a received command.
label fce6 cmdvecs
cvec fce6-fd1f
lcomment fce6 $80 - never used, just a placeholder
lcomment fce8 $81 - down arrow pressed
lcomment fcea $82 - left arrow pressed
lcomment fcec $83 - right arrow pressed
lcomment fcee $84 - up arrow pressed
lcomment fcf0 $85 - HOME pressed
lcomment fcf2 $86 - CLR SCRN pressed
lcomment fcf4 $87 - SET MODE pressed
lcomment fcf6 $88 - PRINT XMIT pressed
lcomment fcf8 $89 - SHIFT+PRINT XMIT pressed
lcomment fcfa $8a - CTRL+PRINT XMIT pressed
lcomment fcfc $8b - SHIFT+CTRL+D pressed
lcomment fcfe $8c - BREAK pressed
lcomment fd00 $8d - CTRL+ESC pressed
lcomment fd02 $8e - RETURN pressed
lcomment fd04 $8f - BACK SPACE pressed
lcomment fd06 $90 - CR received
lcomment fd08 $91 - LF received
lcomment fd0a $92 - HT received
lcomment fd0c $93 - CTRL+1 pressed, or DC2 received
lcomment fd0e $94 - CTRL+2 pressed, or DC4 received
lcomment fd10 $95 - BEL received
lcomment fd12 $96 - CTRL+: pressed- reset handled in interrupt, so this is just a placeholder
lcomment fd14 $97 - CTRL+3 pressed
lcomment fd16 $98 - CTRL+4 pressed
lcomment fd18 $99 - CTRL+I pressed
lcomment fd1a $9a - BS received
lcomment fd1c $9b - CTRL+5 pressed
lcomment fd1e $9c - CTRL+6 pressed

comment fd20
comment fd20 Some constant pointers
dvec fd20-fd27
label fd20 key_buffer_34
label fd22 receive_buffer_767
label fd24 tab_stop_array_10
lcomment fd24 end of tab stop array
label fd26 memory_end_ptr

comment fd28
comment fd28 Some word-size constants
word fd28-fd2d
label fd28 receive_buffer_fill_medium
lcomment fd28 668 bytes
label fd2a receive_buffer_fill_low
lcomment fd2a 450 bytes
label fd2c receive_buffer_fill_high
lcomment fd2c 750 bytes

comment fd2e
label fd2e ruler_text
data fd2e-fe3a

comment fd43
label fd43 config_text

comment fd82
comment fd82 struct baud {
comment fd82       char text[5];   // four characters, padded with leading spaces, null terminated
comment fd82       char offset;    // offset into config_text
comment fd82       char value;     // bits to set on ABCD pins of MM5307 chip, in reverse order
comment fd82 }
label fd82 baud_110
dec fd87
bin fd88
label fd89 baud_150
dec fd8e
bin fd8f
label fd90 baud_300
dec fd95
bin fd96
label fd97 baud_600
dec fd9c
bin fd9d
label fd9e baud_1200
dec fda3
bin fda4
label fda5 baud_2400
dec fdaa
bin fdab
label fdac baud_4800
dec fdb1
bin fdb2
label fdb3 baud_9600
dec fdb8
bin fdb9
label fdba baud_max
dvec fdba

comment fdbc
comment fdbc struct parity {
comment fdbc       char text[2];   // 1 character, null terminated
comment fdbc       char offset;    // offset into config_text
comment fdbc       char value;     // bits for sending to the USART
comment fdbc }
lcomment fdbc even parity, 7 bits, 16xBRF
label fdbc parity_even_7
dec fdbe
bin fdbf
lcomment fdc0 odd parity, 7 bits, 16xBRF
label fdc0 parity_odd_7
dec fdc2
bin fdc3
lcomment fdc4 no parity, 8 bits, 16xBRF
label fdc4 parity_none_8
dec fdc6
bin fdc7
label fdc8 parity_max
dvec fdc8

comment fdca
comment fdca struct stop_bits {
comment fdca       char text[2];   // 1 character, null terminated
comment fdca       char offset;    // offset into config_text
comment fdca       char value;     // bits for sending to the USART
comment fdca }
lcomment fdca 1 stop bit
label fdca stop_bits_1
dec fdcc
bin fdcd
lcomment fdce 2 stop bits
label fdce stop_bits_2
dec fdd0
bin fdd1
label fdd2 stop_bits_max
dvec fdd2

comment fdd4
comment fdd4 struct columns {
comment fdd4       char text[3];   // two characters, null terminated
comment fdd4       char offset;    // offset into config_text
comment fdd4       char value;     // # of columns - 1
comment fdd4 }
label fdd4 columns_40
dec fdd7
lcomment fdd7 f9dasm bug? should show as 33
label fdd9 columns_48
dec fddc
lcomment fddc f9dasm bug? should show as 33
label fdde columns_56
dec fde1
lcomment fde1 f9dasm bug? should show as 33
label fde3 columns_64
dec fde6
lcomment fde6 f9dasm bug? should show as 33
label fde8 columns_69
dec fdeb
lcomment fdeb f9dasm bug? should show as 33
label fded columns_72
dec fdf0
lcomment fdf0 f9dasm bug? should show as 33
label fdf2 columns_80
dec fdf5
lcomment fdf5 f9dasm bug? should show as 33
label fdf7 columns_max
dvec fdf7

comment fdf9
comment fdf9 struct duplexing {
comment fdf9       char text[4];   // three characters, null terminated
comment fdf9       char offset;    // offset into config_text
comment fdf9       char value;     // 1,0,-1
comment fdf9 }
label fdf9 duplexing_page
dec fdfd
label fdff duplexing_half
label fe05 duplexing_full
label fe0b duplexing_max
dvec fe0b

comment fe0d
comment fe0d struct tty {
comment fe0d       char text[4];   // three characters, null terminated
comment fe0d       char offset;    // offset into config_text
comment fe0d       char value;     // # 0 or 1
comment fe0d }
label fe0d tty_no
label fe13 tty_yes
label fe19 tty_max
dvec fe19

comment fe1b
comment fe1b escape sequences. null-terminated string.
label fe1b esc_seq_home
label fe22 esc_seq_up
label fe27 esc_seq_down
label fe2c esc_seq_left
label fe31 esc_seq_right
label fe36 esc_seq_clear

comment fe3b
comment fe3b unused space
data fe3b-fff7

comment fff8
cvec FFF8-FFFF
